{"version":3,"sources":["images/forest-road.png","components/Current-Date.js","components/Year.js","utils/Date-Check.js","utils/solstice-equinox.js","components/InfoCard.js","pages/Autumn.js","pages/Not-Autumn.js","components/Wrapper.js","App.js","index.js"],"names":["module","exports","CurrentDate","today","Date","toISOString","CurrentYear","getFullYear","stockYear","find","year","fall","winter","console","log","isFall","StyleWrapper","styled","article","InfoCard","name","description","link","useState","isOpen","setIsOpen","Button","placement","onClick","style","marginBottom","className","Collapse","Card","CardBody","color","target","href","forestRoad","Autumn","useWindowSize","width","height","colors","wind","gravity","numberOfPieces","friction","Row","Col","md","size","offset","NotAutumn","Wrapper","props","App","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,yC,oICc1BC,EAXK,WAClB,IAAMC,GAAQ,IAAIC,MAAOC,cACzB,OACE,oCACKF,ICJEG,GAAc,IAAIF,MAAOG,cCElCC,ECLsB,CACtB,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,4BAEZ,CACE,KAAQ,KACR,OAAU,2BACV,OAAU,2BACV,KAAQ,2BACR,OAAU,6BDtrBUC,MAAK,SAACC,GAC5B,OAAOA,EAAKA,OAASJ,KAEnBK,EAAOH,EAAUG,KACjBC,EAASJ,EAAUI,OAEzBC,QAAQC,IAAIH,GAEL,IAAMI,EAASX,KAAKF,IAAgBE,KAAKO,IAASP,KAAKF,GAAeE,KAAKQ,G,0TETlF,IAAMI,EAAeC,IAAOC,QAAV,KAoCHC,EAvBE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAAW,EAElBC,oBAAS,GAFS,mBAEvCC,EAFuC,KAE/BC,EAF+B,KAM9C,OACI,kBAACT,EAAD,KACA,kBAACU,EAAA,EAAD,CAAQC,UAAU,MAAMC,QALb,kBAAMH,GAAWD,IAKaK,MAAO,CAAEC,aAAc,QAAUV,KAAMA,EAAMW,UAAU,UAAUX,GACtG,kBAACY,EAAA,EAAD,CAAUR,OAAQA,GACd,kBAACS,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,2BACCb,GAEL,kBAACK,EAAA,EAAD,CAAQS,MAAM,OAAOC,OAAO,QAAQC,KAAMf,GAA1C,mB,uoBCvBpB,IAAMN,EAAeC,IAAOC,QAAV,IAEUoB,KA2EbC,EAnDA,WAAO,IAAD,EAESC,cAAlBC,EAFS,EAETA,MAAOC,EAFE,EAEFA,OAGf,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,CACID,MAAOA,EACPC,OAAQA,EACRC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC3EC,KAAM,KACNC,QAAS,IACTC,eAAgB,IAChBC,SAAU,OAEd,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,sCAGR,gCACI,kBAACD,EAAA,EAAD,KAQI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,EAAGC,OAAQ,IACvB,kBAAC,EAAD,CACAhC,KAAK,cACLC,YAAY,6KACZC,KAAK,mEAGT,kBAAC2B,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,CACA9B,KAAK,gBACLC,YAAY,qSACZC,KAAK,6D,mMCxE7B,IAAMN,EAAeC,IAAOC,QAAV,KAkBHmC,EAVG,WAEd,OACI,kBAAC,EAAD,KACQ,oCCDCC,MATjB,SAAiBC,GAGb,OAFA1C,QAAQC,IAAIC,GAGZ,oCACMA,EAAS,kBAAC,EAAD,MAAY,kBAAC,EAAD,QCGhByC,MAVf,WAEE,OAEE,kBAAC,EAAD,O,6BCDJC,EAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,YAAa,eAK5BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2ce02bec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forest-road.d49afc4c.png\";","import React from 'react';\n\n\n  const CurrentDate = () => {\n    const today = new Date().toISOString()\n    return (\n      <>\n          {today}\n      </>\n    );\n    };\n\n\n\n  export default CurrentDate;\n\n\n\n\n\n","import React from 'react';\n\n\nexport const CurrentYear = new Date().getFullYear()\n    \n\n\n\n\n","import React from \"react\";\nimport CurrentDate from \"../components/Current-Date\";\nimport { CurrentYear } from \"../components/Year\";\nimport { stockData } from \"./solstice-equinox\";\n\nlet stockYear = stockData.find((year) => {\n    return year.year === CurrentYear;\n})\nconst fall = stockYear.fall;\nconst winter = stockYear.winter;\n\nconsole.log(fall);\n\nexport const isFall = Date(CurrentDate) >= Date(fall) && Date(CurrentDate) < Date(winter)\n       \n\n\n"," export const stockData = [\n    {\n      \"year\": 2001,\n      \"spring\": \"2001-03-20T13:31:00.000Z\",\n      \"summer\": \"2001-06-21T07:38:00.000Z\",\n      \"fall\": \"2001-09-22T23:05:00.000Z\",\n      \"winter\": \"2001-12-21T19:22:00.000Z\"\n    },\n    {\n      \"year\": 2002,\n      \"spring\": \"2002-03-20T19:16:00.000Z\",\n      \"summer\": \"2002-06-21T13:25:00.000Z\",\n      \"fall\": \"2002-09-23T04:56:00.000Z\",\n      \"winter\": \"2002-12-22T01:15:00.000Z\"\n    },\n    {\n      \"year\": 2003,\n      \"spring\": \"2003-03-21T01:00:00.000Z\",\n      \"summer\": \"2003-06-21T19:11:00.000Z\",\n      \"fall\": \"2003-09-23T10:47:00.000Z\",\n      \"winter\": \"2003-12-22T07:04:00.000Z\"\n    },\n    {\n      \"year\": 2004,\n      \"spring\": \"2004-03-20T06:49:00.000Z\",\n      \"summer\": \"2004-06-21T00:57:00.000Z\",\n      \"fall\": \"2004-09-22T16:30:00.000Z\",\n      \"winter\": \"2004-12-21T12:42:00.000Z\"\n    },\n    {\n      \"year\": 2005,\n      \"spring\": \"2005-03-20T12:34:00.000Z\",\n      \"summer\": \"2005-06-21T06:46:00.000Z\",\n      \"fall\": \"2005-09-22T22:23:00.000Z\",\n      \"winter\": \"2005-12-21T18:35:00.000Z\"\n    },\n    {\n      \"year\": 2006,\n      \"spring\": \"2006-03-20T18:25:00.000Z\",\n      \"summer\": \"2006-06-21T12:26:00.000Z\",\n      \"fall\": \"2006-09-23T04:04:00.000Z\",\n      \"winter\": \"2006-12-22T00:22:00.000Z\"\n    },\n    {\n      \"year\": 2007,\n      \"spring\": \"2007-03-21T00:07:00.000Z\",\n      \"summer\": \"2007-06-21T18:06:00.000Z\",\n      \"fall\": \"2007-09-23T09:51:00.000Z\",\n      \"winter\": \"2007-12-22T06:08:00.000Z\"\n    },\n    {\n      \"year\": 2008,\n      \"spring\": \"2008-03-20T05:49:00.000Z\",\n      \"summer\": \"2008-06-21T00:00:00.000Z\",\n      \"fall\": \"2008-09-22T15:45:00.000Z\",\n      \"winter\": \"2008-12-21T12:04:00.000Z\"\n    },\n    {\n      \"year\": 2009,\n      \"spring\": \"2009-03-20T11:44:00.000Z\",\n      \"summer\": \"2009-06-21T05:45:00.000Z\",\n      \"fall\": \"2009-09-22T21:18:00.000Z\",\n      \"winter\": \"2009-12-21T17:47:00.000Z\"\n    },\n    {\n      \"year\": 2010,\n      \"spring\": \"2010-03-20T17:32:00.000Z\",\n      \"summer\": \"2010-06-21T11:28:00.000Z\",\n      \"fall\": \"2010-09-23T03:09:00.000Z\",\n      \"winter\": \"2010-12-21T23:38:00.000Z\"\n    },\n    {\n      \"year\": 2011,\n      \"spring\": \"2011-03-20T23:21:00.000Z\",\n      \"summer\": \"2011-06-21T17:16:00.000Z\",\n      \"fall\": \"2011-09-23T09:05:00.000Z\",\n      \"winter\": \"2011-12-22T05:30:00.000Z\"\n    },\n    {\n      \"year\": 2012,\n      \"spring\": \"2012-03-20T05:15:00.000Z\",\n      \"summer\": \"2012-06-20T23:08:00.000Z\",\n      \"fall\": \"2012-09-22T14:49:00.000Z\",\n      \"winter\": \"2012-12-21T11:12:00.000Z\"\n    },\n    {\n      \"year\": 2013,\n      \"spring\": \"2013-03-20T11:02:00.000Z\",\n      \"summer\": \"2013-06-21T05:04:00.000Z\",\n      \"fall\": \"2013-09-22T20:44:00.000Z\",\n      \"winter\": \"2013-12-21T17:11:00.000Z\"\n    },\n    {\n      \"year\": 2014,\n      \"spring\": \"2014-03-20T16:57:00.000Z\",\n      \"summer\": \"2014-06-21T10:52:00.000Z\",\n      \"fall\": \"2014-09-23T02:30:00.000Z\",\n      \"winter\": \"2014-12-21T23:03:00.000Z\"\n    },\n    {\n      \"year\": 2015,\n      \"spring\": \"2015-03-20T22:45:00.000Z\",\n      \"summer\": \"2015-06-21T16:38:00.000Z\",\n      \"fall\": \"2015-09-23T08:20:00.000Z\",\n      \"winter\": \"2015-12-22T04:48:00.000Z\"\n    },\n    {\n      \"year\": 2016,\n      \"spring\": \"2016-03-20T04:31:00.000Z\",\n      \"summer\": \"2016-06-20T22:35:00.000Z\",\n      \"fall\": \"2016-09-22T14:21:00.000Z\",\n      \"winter\": \"2016-12-21T10:45:00.000Z\"\n    },\n    {\n      \"year\": 2017,\n      \"spring\": \"2017-03-20T10:29:00.000Z\",\n      \"summer\": \"2017-06-21T04:25:00.000Z\",\n      \"fall\": \"2017-09-22T20:02:00.000Z\",\n      \"winter\": \"2017-12-21T16:29:00.000Z\"\n    },\n    {\n      \"year\": 2018,\n      \"spring\": \"2018-03-20T16:15:00.000Z\",\n      \"summer\": \"2018-06-21T10:07:00.000Z\",\n      \"fall\": \"2018-09-23T01:54:00.000Z\",\n      \"winter\": \"2018-12-21T22:22:00.000Z\"\n    },\n    {\n      \"year\": 2019,\n      \"spring\": \"2019-03-20T21:58:00.000Z\",\n      \"summer\": \"2019-06-21T15:54:00.000Z\",\n      \"fall\": \"2019-09-23T07:50:00.000Z\",\n      \"winter\": \"2019-12-22T04:19:00.000Z\"\n    },\n    {\n      \"year\": 2020,\n      \"spring\": \"2020-03-20T03:50:00.000Z\",\n      \"summer\": \"2020-06-20T21:43:00.000Z\",\n      \"fall\": \"2020-09-22T13:31:00.000Z\",\n      \"winter\": \"2020-12-21T10:03:00.000Z\"\n    },\n    {\n      \"year\": 2021,\n      \"spring\": \"2021-03-20T09:37:00.000Z\",\n      \"summer\": \"2021-06-21T03:32:00.000Z\",\n      \"fall\": \"2021-09-22T19:21:00.000Z\",\n      \"winter\": \"2021-12-21T15:59:00.000Z\"\n    },\n    {\n      \"year\": 2022,\n      \"spring\": \"2022-03-20T15:33:00.000Z\",\n      \"summer\": \"2022-06-21T09:14:00.000Z\",\n      \"fall\": \"2022-09-23T01:04:00.000Z\",\n      \"winter\": \"2022-12-21T21:48:00.000Z\"\n    },\n    {\n      \"year\": 2023,\n      \"spring\": \"2023-03-20T21:25:00.000Z\",\n      \"summer\": \"2023-06-21T14:58:00.000Z\",\n      \"fall\": \"2023-09-23T06:50:00.000Z\",\n      \"winter\": \"2023-12-22T03:28:00.000Z\"\n    },\n    {\n      \"year\": 2024,\n      \"spring\": \"2024-03-20T03:07:00.000Z\",\n      \"summer\": \"2024-06-20T20:51:00.000Z\",\n      \"fall\": \"2024-09-22T12:44:00.000Z\",\n      \"winter\": \"2024-12-21T09:20:00.000Z\"\n    },\n    {\n      \"year\": 2025,\n      \"spring\": \"2025-03-20T09:02:00.000Z\",\n      \"summer\": \"2025-06-21T02:42:00.000Z\",\n      \"fall\": \"2025-09-22T18:20:00.000Z\",\n      \"winter\": \"2025-12-21T15:03:00.000Z\"\n    },\n    {\n      \"year\": 2026,\n      \"spring\": \"2026-03-20T14:46:00.000Z\",\n      \"summer\": \"2026-06-21T08:25:00.000Z\",\n      \"fall\": \"2026-09-23T00:06:00.000Z\",\n      \"winter\": \"2026-12-21T20:50:00.000Z\"\n    },\n    {\n      \"year\": 2027,\n      \"spring\": \"2027-03-20T20:25:00.000Z\",\n      \"summer\": \"2027-06-21T14:11:00.000Z\",\n      \"fall\": \"2027-09-23T06:02:00.000Z\",\n      \"winter\": \"2027-12-22T02:43:00.000Z\"\n    },\n    {\n      \"year\": 2028,\n      \"spring\": \"2028-03-20T02:17:00.000Z\",\n      \"summer\": \"2028-06-20T20:02:00.000Z\",\n      \"fall\": \"2028-09-22T11:45:00.000Z\",\n      \"winter\": \"2028-12-21T08:20:00.000Z\"\n    },\n    {\n      \"year\": 2029,\n      \"spring\": \"2029-03-20T08:01:00.000Z\",\n      \"summer\": \"2029-06-21T01:48:00.000Z\",\n      \"fall\": \"2029-09-22T17:37:00.000Z\",\n      \"winter\": \"2029-12-21T14:14:00.000Z\"\n    },\n    {\n      \"year\": 2030,\n      \"spring\": \"2030-03-20T13:51:00.000Z\",\n      \"summer\": \"2030-06-21T07:31:00.000Z\",\n      \"fall\": \"2030-09-22T23:27:00.000Z\",\n      \"winter\": \"2030-12-21T20:09:00.000Z\"\n    },\n    {\n      \"year\": 2031,\n      \"spring\": \"2031-03-20T19:41:00.000Z\",\n      \"summer\": \"2031-06-21T13:17:00.000Z\",\n      \"fall\": \"2031-09-23T05:15:00.000Z\",\n      \"winter\": \"2031-12-22T01:56:00.000Z\"\n    },\n    {\n      \"year\": 2032,\n      \"spring\": \"2032-03-20T01:23:00.000Z\",\n      \"summer\": \"2032-06-20T19:09:00.000Z\",\n      \"fall\": \"2032-09-22T11:11:00.000Z\",\n      \"winter\": \"2032-12-21T07:57:00.000Z\"\n    },\n    {\n      \"year\": 2033,\n      \"spring\": \"2033-03-20T07:23:00.000Z\",\n      \"summer\": \"2033-06-21T01:01:00.000Z\",\n      \"fall\": \"2033-09-22T16:52:00.000Z\",\n      \"winter\": \"2033-12-21T13:45:00.000Z\"\n    },\n    {\n      \"year\": 2034,\n      \"spring\": \"2034-03-20T13:18:00.000Z\",\n      \"summer\": \"2034-06-21T06:45:00.000Z\",\n      \"fall\": \"2034-09-22T22:41:00.000Z\",\n      \"winter\": \"2034-12-21T19:35:00.000Z\"\n    },\n    {\n      \"year\": 2035,\n      \"spring\": \"2035-03-20T19:03:00.000Z\",\n      \"summer\": \"2035-06-21T12:33:00.000Z\",\n      \"fall\": \"2035-09-23T04:39:00.000Z\",\n      \"winter\": \"2035-12-22T01:31:00.000Z\"\n    },\n    {\n      \"year\": 2036,\n      \"spring\": \"2036-03-20T01:02:00.000Z\",\n      \"summer\": \"2036-06-20T18:31:00.000Z\",\n      \"fall\": \"2036-09-22T10:23:00.000Z\",\n      \"winter\": \"2036-12-21T07:12:00.000Z\"\n    },\n    {\n      \"year\": 2037,\n      \"spring\": \"2037-03-20T06:50:00.000Z\",\n      \"summer\": \"2037-06-21T00:22:00.000Z\",\n      \"fall\": \"2037-09-22T16:13:00.000Z\",\n      \"winter\": \"2037-12-21T13:08:00.000Z\"\n    },\n    {\n      \"year\": 2038,\n      \"spring\": \"2038-03-20T12:40:00.000Z\",\n      \"summer\": \"2038-06-21T06:09:00.000Z\",\n      \"fall\": \"2038-09-22T22:02:00.000Z\",\n      \"winter\": \"2038-12-21T19:01:00.000Z\"\n    },\n    {\n      \"year\": 2039,\n      \"spring\": \"2039-03-20T18:32:00.000Z\",\n      \"summer\": \"2039-06-21T11:58:00.000Z\",\n      \"fall\": \"2039-09-23T03:50:00.000Z\",\n      \"winter\": \"2039-12-22T00:41:00.000Z\"\n    },\n    {\n      \"year\": 2040,\n      \"spring\": \"2040-03-20T00:11:00.000Z\",\n      \"summer\": \"2040-06-20T17:46:00.000Z\",\n      \"fall\": \"2040-09-22T09:44:00.000Z\",\n      \"winter\": \"2040-12-21T06:33:00.000Z\"\n    },\n    {\n      \"year\": 2041,\n      \"spring\": \"2041-03-20T06:07:00.000Z\",\n      \"summer\": \"2041-06-20T23:37:00.000Z\",\n      \"fall\": \"2041-09-22T15:27:00.000Z\",\n      \"winter\": \"2041-12-21T12:19:00.000Z\"\n    },\n    {\n      \"year\": 2042,\n      \"spring\": \"2042-03-20T11:53:00.000Z\",\n      \"summer\": \"2042-06-21T05:16:00.000Z\",\n      \"fall\": \"2042-09-22T21:11:00.000Z\",\n      \"winter\": \"2042-12-21T18:04:00.000Z\"\n    },\n    {\n      \"year\": 2043,\n      \"spring\": \"2043-03-20T17:29:00.000Z\",\n      \"summer\": \"2043-06-21T10:59:00.000Z\",\n      \"fall\": \"2043-09-23T03:07:00.000Z\",\n      \"winter\": \"2043-12-22T00:02:00.000Z\"\n    },\n    {\n      \"year\": 2044,\n      \"spring\": \"2044-03-19T23:20:00.000Z\",\n      \"summer\": \"2044-06-20T16:50:00.000Z\",\n      \"fall\": \"2044-09-22T08:47:00.000Z\",\n      \"winter\": \"2044-12-21T05:43:00.000Z\"\n    },\n    {\n      \"year\": 2045,\n      \"spring\": \"2045-03-20T05:08:00.000Z\",\n      \"summer\": \"2045-06-20T22:34:00.000Z\",\n      \"fall\": \"2045-09-22T14:33:00.000Z\",\n      \"winter\": \"2045-12-21T11:36:00.000Z\"\n    },\n    {\n      \"year\": 2046,\n      \"spring\": \"2046-03-20T10:58:00.000Z\",\n      \"summer\": \"2046-06-21T04:15:00.000Z\",\n      \"fall\": \"2046-09-22T20:22:00.000Z\",\n      \"winter\": \"2046-12-21T17:28:00.000Z\"\n    },\n    {\n      \"year\": 2047,\n      \"spring\": \"2047-03-20T16:52:00.000Z\",\n      \"summer\": \"2047-06-21T10:02:00.000Z\",\n      \"fall\": \"2047-09-23T02:07:00.000Z\",\n      \"winter\": \"2047-12-21T23:07:00.000Z\"\n    },\n    {\n      \"year\": 2048,\n      \"spring\": \"2048-03-19T22:34:00.000Z\",\n      \"summer\": \"2048-06-20T15:54:00.000Z\",\n      \"fall\": \"2048-09-22T08:01:00.000Z\",\n      \"winter\": \"2048-12-21T05:02:00.000Z\"\n    },\n    {\n      \"year\": 2049,\n      \"spring\": \"2049-03-20T04:28:00.000Z\",\n      \"summer\": \"2049-06-20T21:47:00.000Z\",\n      \"fall\": \"2049-09-22T13:42:00.000Z\",\n      \"winter\": \"2049-12-21T10:51:00.000Z\"\n    },\n    {\n      \"year\": 2050,\n      \"spring\": \"2050-03-20T10:20:00.000Z\",\n      \"summer\": \"2050-06-21T03:33:00.000Z\",\n      \"fall\": \"2050-09-22T19:29:00.000Z\",\n      \"winter\": \"2050-12-21T16:39:00.000Z\"\n    },\n    {\n      \"year\": 2051,\n      \"spring\": \"2051-03-20T15:58:00.000Z\",\n      \"summer\": \"2051-06-21T09:17:00.000Z\",\n      \"fall\": \"2051-09-23T01:26:00.000Z\",\n      \"winter\": \"2051-12-21T22:33:00.000Z\"\n    },\n    {\n      \"year\": 2052,\n      \"spring\": \"2052-03-19T21:56:00.000Z\",\n      \"summer\": \"2052-06-20T15:16:00.000Z\",\n      \"fall\": \"2052-09-22T07:16:00.000Z\",\n      \"winter\": \"2052-12-21T04:18:00.000Z\"\n    },\n    {\n      \"year\": 2053,\n      \"spring\": \"2053-03-20T03:46:00.000Z\",\n      \"summer\": \"2053-06-20T21:03:00.000Z\",\n      \"fall\": \"2053-09-22T13:05:00.000Z\",\n      \"winter\": \"2053-12-21T10:09:00.000Z\"\n    },\n    {\n      \"year\": 2054,\n      \"spring\": \"2054-03-20T09:35:00.000Z\",\n      \"summer\": \"2054-06-21T02:47:00.000Z\",\n      \"fall\": \"2054-09-22T19:00:00.000Z\",\n      \"winter\": \"2054-12-21T16:10:00.000Z\"\n    },\n    {\n      \"year\": 2055,\n      \"spring\": \"2055-03-20T15:28:00.000Z\",\n      \"summer\": \"2055-06-21T08:39:00.000Z\",\n      \"fall\": \"2055-09-23T00:48:00.000Z\",\n      \"winter\": \"2055-12-21T21:56:00.000Z\"\n    },\n    {\n      \"year\": 2056,\n      \"spring\": \"2056-03-19T21:11:00.000Z\",\n      \"summer\": \"2056-06-20T14:29:00.000Z\",\n      \"fall\": \"2056-09-22T06:40:00.000Z\",\n      \"winter\": \"2056-12-21T03:52:00.000Z\"\n    },\n    {\n      \"year\": 2057,\n      \"spring\": \"2057-03-20T03:08:00.000Z\",\n      \"summer\": \"2057-06-20T20:19:00.000Z\",\n      \"fall\": \"2057-09-22T12:23:00.000Z\",\n      \"winter\": \"2057-12-21T09:42:00.000Z\"\n    },\n    {\n      \"year\": 2058,\n      \"spring\": \"2058-03-20T09:04:00.000Z\",\n      \"summer\": \"2058-06-21T02:03:00.000Z\",\n      \"fall\": \"2058-09-22T18:07:00.000Z\",\n      \"winter\": \"2058-12-21T15:24:00.000Z\"\n    },\n    {\n      \"year\": 2059,\n      \"spring\": \"2059-03-20T14:44:00.000Z\",\n      \"summer\": \"2059-06-21T07:47:00.000Z\",\n      \"fall\": \"2059-09-23T00:03:00.000Z\",\n      \"winter\": \"2059-12-21T21:18:00.000Z\"\n    },\n    {\n      \"year\": 2060,\n      \"spring\": \"2060-03-19T20:37:00.000Z\",\n      \"summer\": \"2060-06-20T13:44:00.000Z\",\n      \"fall\": \"2060-09-22T05:47:00.000Z\",\n      \"winter\": \"2060-12-21T03:00:00.000Z\"\n    },\n    {\n      \"year\": 2061,\n      \"spring\": \"2061-03-20T02:26:00.000Z\",\n      \"summer\": \"2061-06-20T19:33:00.000Z\",\n      \"fall\": \"2061-09-22T11:31:00.000Z\",\n      \"winter\": \"2061-12-21T08:49:00.000Z\"\n    },\n    {\n      \"year\": 2062,\n      \"spring\": \"2062-03-20T08:07:00.000Z\",\n      \"summer\": \"2062-06-21T01:10:00.000Z\",\n      \"fall\": \"2062-09-22T17:19:00.000Z\",\n      \"winter\": \"2062-12-21T14:42:00.000Z\"\n    },\n    {\n      \"year\": 2063,\n      \"spring\": \"2063-03-20T13:59:00.000Z\",\n      \"summer\": \"2063-06-21T07:02:00.000Z\",\n      \"fall\": \"2063-09-22T23:08:00.000Z\",\n      \"winter\": \"2063-12-21T20:22:00.000Z\"\n    },\n    {\n      \"year\": 2064,\n      \"spring\": \"2064-03-19T19:40:00.000Z\",\n      \"summer\": \"2064-06-20T12:47:00.000Z\",\n      \"fall\": \"2064-09-22T04:58:00.000Z\",\n      \"winter\": \"2064-12-21T02:10:00.000Z\"\n    },\n    {\n      \"year\": 2065,\n      \"spring\": \"2065-03-20T01:27:00.000Z\",\n      \"summer\": \"2065-06-20T18:31:00.000Z\",\n      \"fall\": \"2065-09-22T10:41:00.000Z\",\n      \"winter\": \"2065-12-21T07:59:00.000Z\"\n    },\n    {\n      \"year\": 2066,\n      \"spring\": \"2066-03-20T07:19:00.000Z\",\n      \"summer\": \"2066-06-21T00:16:00.000Z\",\n      \"fall\": \"2066-09-22T16:27:00.000Z\",\n      \"winter\": \"2066-12-21T13:45:00.000Z\"\n    },\n    {\n      \"year\": 2067,\n      \"spring\": \"2067-03-20T12:55:00.000Z\",\n      \"summer\": \"2067-06-21T05:56:00.000Z\",\n      \"fall\": \"2067-09-22T22:20:00.000Z\",\n      \"winter\": \"2067-12-21T19:44:00.000Z\"\n    },\n    {\n      \"year\": 2068,\n      \"spring\": \"2068-03-19T18:51:00.000Z\",\n      \"summer\": \"2068-06-20T11:55:00.000Z\",\n      \"fall\": \"2068-09-22T04:09:00.000Z\",\n      \"winter\": \"2068-12-21T01:34:00.000Z\"\n    },\n    {\n      \"year\": 2069,\n      \"spring\": \"2069-03-20T00:44:00.000Z\",\n      \"summer\": \"2069-06-20T17:40:00.000Z\",\n      \"fall\": \"2069-09-22T09:51:00.000Z\",\n      \"winter\": \"2069-12-21T07:21:00.000Z\"\n    },\n    {\n      \"year\": 2070,\n      \"spring\": \"2070-03-20T06:35:00.000Z\",\n      \"summer\": \"2070-06-20T23:22:00.000Z\",\n      \"fall\": \"2070-09-22T15:45:00.000Z\",\n      \"winter\": \"2070-12-21T13:19:00.000Z\"\n    },\n    {\n      \"year\": 2071,\n      \"spring\": \"2071-03-20T12:36:00.000Z\",\n      \"summer\": \"2071-06-21T05:21:00.000Z\",\n      \"fall\": \"2071-09-22T21:39:00.000Z\",\n      \"winter\": \"2071-12-21T19:05:00.000Z\"\n    },\n    {\n      \"year\": 2072,\n      \"spring\": \"2072-03-19T18:19:00.000Z\",\n      \"summer\": \"2072-06-20T11:12:00.000Z\",\n      \"fall\": \"2072-09-22T03:26:00.000Z\",\n      \"winter\": \"2072-12-21T00:54:00.000Z\"\n    },\n    {\n      \"year\": 2073,\n      \"spring\": \"2073-03-20T00:12:00.000Z\",\n      \"summer\": \"2073-06-20T17:06:00.000Z\",\n      \"fall\": \"2073-09-22T09:14:00.000Z\",\n      \"winter\": \"2073-12-21T06:50:00.000Z\"\n    },\n    {\n      \"year\": 2074,\n      \"spring\": \"2074-03-20T06:09:00.000Z\",\n      \"summer\": \"2074-06-20T22:59:00.000Z\",\n      \"fall\": \"2074-09-22T15:04:00.000Z\",\n      \"winter\": \"2074-12-21T12:36:00.000Z\"\n    },\n    {\n      \"year\": 2075,\n      \"spring\": \"2075-03-20T11:48:00.000Z\",\n      \"summer\": \"2075-06-21T04:41:00.000Z\",\n      \"fall\": \"2075-09-22T21:00:00.000Z\",\n      \"winter\": \"2075-12-21T18:28:00.000Z\"\n    },\n    {\n      \"year\": 2076,\n      \"spring\": \"2076-03-19T17:37:00.000Z\",\n      \"summer\": \"2076-06-20T10:35:00.000Z\",\n      \"fall\": \"2076-09-22T02:48:00.000Z\",\n      \"winter\": \"2076-12-21T00:12:00.000Z\"\n    },\n    {\n      \"year\": 2077,\n      \"spring\": \"2077-03-19T23:30:00.000Z\",\n      \"summer\": \"2077-06-20T16:23:00.000Z\",\n      \"fall\": \"2077-09-22T08:35:00.000Z\",\n      \"winter\": \"2077-12-21T06:00:00.000Z\"\n    },\n    {\n      \"year\": 2078,\n      \"spring\": \"2078-03-20T05:11:00.000Z\",\n      \"summer\": \"2078-06-20T21:58:00.000Z\",\n      \"fall\": \"2078-09-22T14:25:00.000Z\",\n      \"winter\": \"2078-12-21T11:59:00.000Z\"\n    },\n    {\n      \"year\": 2079,\n      \"spring\": \"2079-03-20T11:03:00.000Z\",\n      \"summer\": \"2079-06-21T03:51:00.000Z\",\n      \"fall\": \"2079-09-22T20:15:00.000Z\",\n      \"winter\": \"2079-12-21T17:46:00.000Z\"\n    },\n    {\n      \"year\": 2080,\n      \"spring\": \"2080-03-19T16:43:00.000Z\",\n      \"summer\": \"2080-06-20T09:33:00.000Z\",\n      \"fall\": \"2080-09-22T01:55:00.000Z\",\n      \"winter\": \"2080-12-20T23:31:00.000Z\"\n    },\n    {\n      \"year\": 2081,\n      \"spring\": \"2081-03-19T22:34:00.000Z\",\n      \"summer\": \"2081-06-20T15:16:00.000Z\",\n      \"fall\": \"2081-09-22T07:38:00.000Z\",\n      \"winter\": \"2081-12-21T05:22:00.000Z\"\n    },\n    {\n      \"year\": 2082,\n      \"spring\": \"2082-03-20T04:32:00.000Z\",\n      \"summer\": \"2082-06-20T21:04:00.000Z\",\n      \"fall\": \"2082-09-22T13:24:00.000Z\",\n      \"winter\": \"2082-12-21T11:06:00.000Z\"\n    },\n    {\n      \"year\": 2083,\n      \"spring\": \"2083-03-20T10:08:00.000Z\",\n      \"summer\": \"2083-06-21T02:41:00.000Z\",\n      \"fall\": \"2083-09-22T19:10:00.000Z\",\n      \"winter\": \"2083-12-21T16:51:00.000Z\"\n    },\n    {\n      \"year\": 2084,\n      \"spring\": \"2084-03-19T15:58:00.000Z\",\n      \"summer\": \"2084-06-20T08:39:00.000Z\",\n      \"fall\": \"2084-09-22T00:58:00.000Z\",\n      \"winter\": \"2084-12-20T22:40:00.000Z\"\n    },\n    {\n      \"year\": 2085,\n      \"spring\": \"2085-03-19T21:53:00.000Z\",\n      \"summer\": \"2085-06-20T14:33:00.000Z\",\n      \"fall\": \"2085-09-22T06:43:00.000Z\",\n      \"winter\": \"2085-12-21T04:29:00.000Z\"\n    },\n    {\n      \"year\": 2086,\n      \"spring\": \"2086-03-20T03:36:00.000Z\",\n      \"summer\": \"2086-06-20T20:11:00.000Z\",\n      \"fall\": \"2086-09-22T12:33:00.000Z\",\n      \"winter\": \"2086-12-21T10:24:00.000Z\"\n    },\n    {\n      \"year\": 2087,\n      \"spring\": \"2087-03-20T09:27:00.000Z\",\n      \"summer\": \"2087-06-21T02:05:00.000Z\",\n      \"fall\": \"2087-09-22T18:27:00.000Z\",\n      \"winter\": \"2087-12-21T16:07:00.000Z\"\n    },\n    {\n      \"year\": 2088,\n      \"spring\": \"2088-03-19T15:16:00.000Z\",\n      \"summer\": \"2088-06-20T07:57:00.000Z\",\n      \"fall\": \"2088-09-22T00:18:00.000Z\",\n      \"winter\": \"2088-12-20T21:56:00.000Z\"\n    },\n    {\n      \"year\": 2089,\n      \"spring\": \"2089-03-19T21:07:00.000Z\",\n      \"summer\": \"2089-06-20T13:43:00.000Z\",\n      \"fall\": \"2089-09-22T06:07:00.000Z\",\n      \"winter\": \"2089-12-21T03:53:00.000Z\"\n    },\n    {\n      \"year\": 2090,\n      \"spring\": \"2090-03-20T03:03:00.000Z\",\n      \"summer\": \"2090-06-20T19:37:00.000Z\",\n      \"fall\": \"2090-09-22T12:01:00.000Z\",\n      \"winter\": \"2090-12-21T09:45:00.000Z\"\n    },\n    {\n      \"year\": 2091,\n      \"spring\": \"2091-03-20T08:40:00.000Z\",\n      \"summer\": \"2091-06-21T01:17:00.000Z\",\n      \"fall\": \"2091-09-22T17:49:00.000Z\",\n      \"winter\": \"2091-12-21T15:37:00.000Z\"\n    },\n    {\n      \"year\": 2092,\n      \"spring\": \"2092-03-19T14:33:00.000Z\",\n      \"summer\": \"2092-06-20T07:14:00.000Z\",\n      \"fall\": \"2092-09-21T23:41:00.000Z\",\n      \"winter\": \"2092-12-20T21:31:00.000Z\"\n    },\n    {\n      \"year\": 2093,\n      \"spring\": \"2093-03-19T20:35:00.000Z\",\n      \"summer\": \"2093-06-20T13:08:00.000Z\",\n      \"fall\": \"2093-09-22T05:30:00.000Z\",\n      \"winter\": \"2093-12-21T03:21:00.000Z\"\n    },\n    {\n      \"year\": 2094,\n      \"spring\": \"2094-03-20T02:20:00.000Z\",\n      \"summer\": \"2094-06-20T18:40:00.000Z\",\n      \"fall\": \"2094-09-22T11:15:00.000Z\",\n      \"winter\": \"2094-12-21T09:11:00.000Z\"\n    },\n    {\n      \"year\": 2095,\n      \"spring\": \"2095-03-20T08:14:00.000Z\",\n      \"summer\": \"2095-06-21T00:38:00.000Z\",\n      \"fall\": \"2095-09-22T17:10:00.000Z\",\n      \"winter\": \"2095-12-21T15:00:00.000Z\"\n    },\n    {\n      \"year\": 2096,\n      \"spring\": \"2096-03-19T14:03:00.000Z\",\n      \"summer\": \"2096-06-20T06:31:00.000Z\",\n      \"fall\": \"2096-09-21T22:55:00.000Z\",\n      \"winter\": \"2096-12-20T20:46:00.000Z\"\n    },\n    {\n      \"year\": 2097,\n      \"spring\": \"2097-03-19T19:49:00.000Z\",\n      \"summer\": \"2097-06-20T12:14:00.000Z\",\n      \"fall\": \"2097-09-22T04:37:00.000Z\",\n      \"winter\": \"2097-12-21T02:38:00.000Z\"\n    },\n    {\n      \"year\": 2098,\n      \"spring\": \"2098-03-20T01:38:00.000Z\",\n      \"summer\": \"2098-06-20T18:01:00.000Z\",\n      \"fall\": \"2098-09-22T10:22:00.000Z\",\n      \"winter\": \"2098-12-21T08:19:00.000Z\"\n    },\n    {\n      \"year\": 2099,\n      \"spring\": \"2099-03-20T07:17:00.000Z\",\n      \"summer\": \"2099-06-20T23:41:00.000Z\",\n      \"fall\": \"2099-09-22T16:10:00.000Z\",\n      \"winter\": \"2099-12-21T14:04:00.000Z\"\n    },\n    {\n      \"year\": 2100,\n      \"spring\": \"2100-03-20T13:04:00.000Z\",\n      \"summer\": \"2100-06-21T05:32:00.000Z\",\n      \"fall\": \"2100-09-22T22:00:00.000Z\",\n      \"winter\": \"2100-12-21T19:51:00.000Z\"\n    }\n  ]","import React, { useState } from \"react\"\nimport { Button, Card, CardBody, CardHeader, Col, Collapse } from \"reactstrap\";\nimport styled from \"styled-components\";\n\nconst StyleWrapper = styled.article`\n    card {\n        background-color: #e5c080;\n        border: none;\n    }\n\n    .toggle {\n        background-color: #734024;\n        border: none;\n        color: #fdfbd9\n    }\n    `\n\nconst InfoCard = ({ name, description, link }) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n\n\n    return (\n        <StyleWrapper>\n        <Button placement=\"top\" onClick={toggle} style={{ marginBottom: '1rem' }} name={name} className=\"toggle\">{name}</Button>\n            <Collapse isOpen={isOpen}>\n                <Card>\n                    <CardBody>\n                        <p>\n                        {description}\n                        </p>\n                    <Button color=\"link\" target=\"blank\" href={link}>Learn More</Button>\n                    </CardBody>\n                </Card>\n            </Collapse>\n        </StyleWrapper>\n    )\n};\n\nexport default InfoCard;","import React from \"react\";\nimport InfoCard from \"../components/InfoCard\";\nimport { Col, Row } from \"reactstrap\";\nimport styled from \"styled-components\";\nimport forestRoad from \"../images/forest-road.png\";\nimport { useWindowSize } from 'react-use'\nimport Confetti from 'react-confetti'\n\n\nconst StyleWrapper = styled.article`\n    background-attachment: fixed;\n    background-image: url(${forestRoad});\n    background-size: cover;\n    background-position: center;\n    height: 100vh;\n    width: 100vw;\n\n    h1 {\n        align-items: center;\n        color: #fdfbd9;\n        font-size: 100px;\n        padding-top: 300px;\n        text-align: center;\n        text-shadow: -10px -3px  5px #734024;\n    }\n\n    footer {\n        position: fixed;\n        left: 0;\n        bottom: 0;\n        width: 100%;\n        text-align: center;\n    }\n    `\n\nconst Autumn = () => {\n\n    const { width, height } = useWindowSize()\n\n\n    return (\n        <StyleWrapper>\n            <Confetti\n                width={width}\n                height={height}\n                colors={[\"#ac5423\", \"#d37e23\", \"#6d3a23\", \"#ac5423\", \"#734024\", \"#a37132\", \"#4d5521\"]}\n                wind={0.005}\n                gravity={0.01}\n                numberOfPieces={100}\n                friction={0.975}\n    />\n            <Row>\n                <Col>\n                    <h1>YES!</h1>\n                </Col>\n            </Row>\n            <footer>\n                <Row>\n                    {/* <Col md={{size: 2, offset: 1}}>\n                        <InfoCard \n                        name=\"Stay Spooky\"\n                        description=\"How to stay spooky\"\n                        link=\"test link\n                        \"/>\n                    </Col> */}\n                    <Col md={{size: 5, offset: 2}}>\n                        <InfoCard\n                        name=\"Stay Spooky\"\n                        description=\"The Halloween tradition originated with the ancient Celtic festival of Samhain (pronounced sow-in), when people would light bonfires and wear costumes to ward off ghosts.\"\n                        link=\"https://www.history.com/topics/halloween/history-of-halloween\"\n                        />\n                    </Col>\n                    <Col md={2}>\n                        <InfoCard \n                        name=\"Happy Harvest\"\n                        description=\"The Autumn Equinox is the first day of the autumn season and occurs when the sun passes the equator moving from the northern to the southern hemisphere. The North Pole begins to tilt away from the sun. Day and night have approximately the same length. Autumnal equinox is near 22 September.\"\n                        link=\"https://www.britannica.com/science/autumnal-equinox\"\n                        />\n                    </Col>\n                </Row>\n            </footer>\n        </StyleWrapper>\n    )\n\n}\n\nexport default Autumn;","import React from \"react\";\nimport { Card, CardTitle } from \"reactstrap\";\nimport styled from \"styled-components\";\n\nconst StyleWrapper = styled.article`\n        h1 {\n            text-align: center;\n            font-size: 60px;\n            margin-top: 100px;\n        }\n    `\n\nconst NotAutumn = () => {\n\n    return (\n        <StyleWrapper>\n                <h1>No</h1>\n        </StyleWrapper>\n    )\n\n}\n\nexport default NotAutumn;\n","import React, { Component } from \"react\";\nimport { isFall } from \"../utils/Date-Check\";\nimport Autumn from \"../pages/Autumn\";\nimport NotAutumn from \"../pages/Not-Autumn\";\n\n\nfunction Wrapper(props) {\n    console.log(isFall);\n\n    return (\n    <>\n         {isFall ? <Autumn/> : <NotAutumn/>}\n    </>);\n  }\n  \n  export default Wrapper;\n\n","import React from 'react';\nimport Wrapper from \"./components/Wrapper\";\n\n\nfunction App() {\n\n  return (\n\n    <Wrapper />\n\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\";\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Oldenburg', 'cursive;']\n  }\n});\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}